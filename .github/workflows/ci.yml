name: CI

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - main
      - dev

jobs:

  snakemake-graphs-format:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash -l {0}
    steps:

      - name: Checkout zarp repository
        uses: actions/checkout@v4

      - name: Setup miniconda & zarp env
        uses: conda-incubator/setup-miniconda@v3.0.4
        with:
          python-version: "3.10"
          mamba-version: "1.3.0"
          auto-update-conda: false
          activate-environment: zarp
          auto-activate-base: false
          channel-priority: true
          channels: conda-forge
          environment-file: install/environment.yml

      - name: Update zarp env with root. packages
        run: mamba env update -p $CONDA_PREFIX -f install/environment.root.yml

      - name: Update zarp env with dev. packages
        run: mamba env update -p $CONDA_PREFIX -f install/environment.dev.yml

      - name: Display all miniconda & env info
        run: |
          conda info -a
          conda list

      - name: Run test script for snakemake format
        run: bash tests/test_format/test_snakefmt.sh

      - name: Run test script for snakemake lint
        run: bash tests/test_format/test_snakemake_lint.sh

      - name: Run test script for snakemake rulegraph
        run: bash tests/test_create_rule_graph/test.sh

      - name: Run test script for snakemake DAG
        run: bash tests/test_create_dag_image/test.sh


  integration-singularity:
    needs:
      - snakemake-graphs-format
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash -l {0}
    steps:

      - name: Checkout zarp repository
        uses: actions/checkout@v4

      - name: Setup miniconda & zarp env
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: zarp
          auto-activate-base: false
          auto-update-conda: false
          channel-priority: true
          channels: conda-forge
          environment-file: install/environment.yml
          mamba-version: "1.3.0"
          python-version: "3.10"

      - name: Update zarp env with root. packages
        run: mamba env update -p $CONDA_PREFIX -f install/environment.root.yml

      - name: Update zarp env with dev. packages
        run: mamba env update -p $CONDA_PREFIX -f install/environment.dev.yml

      - name: Display all miniconda & env info
        run: |
          conda info -a
          conda list
      - name: Run test script
        run: bash tests/test_integration_workflow/test.local.sh

      - name: Run htsinfer test script
        run: bash tests/test_htsinfer_with_singularity/test.local.sh

      - name: Run SRA downloads workflow
        run: bash tests/test_sra_download_with_singularity/test.local.sh

  integration-singularity-tempflag:
    needs:
      - snakemake-graphs-format
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash -l {0}
    steps:

      - name: Checkout zarp repository
        uses: actions/checkout@v4

      - name: Setup miniconda & zarp env
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: zarp
          auto-activate-base: false
          auto-update-conda: false
          channel-priority: true
          channels: conda-forge
          environment-file: install/environment.yml
          mamba-version: "1.3.0"
          python-version: "3.10"

      - name: Update zarp env with root. packages
        run: mamba env update -p $CONDA_PREFIX -f install/environment.root.yml

      - name: Update zarp env with dev. packages
        run: mamba env update -p $CONDA_PREFIX -f install/environment.dev.yml

      - name: Display all miniconda & env info
        run: |
          conda info -a
          conda list
      - name: Run test script
        run: bash tests/test_integration_workflow/test.temp.flag.sh

  integration-singularity-MultipleLanes:
    needs:
      - snakemake-graphs-format
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash -l {0}
    steps:

      - name: Checkout zarp repository
        uses: actions/checkout@v4

      - name: Setup miniconda & zarp env
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: zarp
          auto-activate-base: false
          auto-update-conda: false
          channel-priority: true
          channels: conda-forge
          environment-file: install/environment.yml
          mamba-version: "1.3.0"
          python-version: "3.10"

      - name: Update zarp env with root. packages
        run: mamba env update -p $CONDA_PREFIX -f install/environment.root.yml

      - name: Update zarp env with dev. packages
        run: mamba env update -p $CONDA_PREFIX -f install/environment.dev.yml

      - name: Display all miniconda & env info
        run: |
          conda info -a
          conda list
      - name: Run test script
        run: bash tests/test_integration_workflow_multiple_lanes/test.local.sh

  integration-conda:
    needs:
      - snakemake-graphs-format
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash -l {0}
    steps:

      - name: Checkout zarp repository
        uses: actions/checkout@v4

      - name: Setup miniconda & zarp env
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: zarp
          auto-activate-base: false
          auto-update-conda: false
          channel-priority: true
          channels: conda-forge
          environment-file: install/environment.yml
          mamba-version: "1.3.0"
          python-version: "3.10"

      - name: Update zarp env with dev. packages
        run: mamba env update -p $CONDA_PREFIX -f install/environment.dev.yml

      - name: Display all miniconda & env info
        run: |
          conda info -a
          conda list
      - name: Run test script
        run: bash tests/test_integration_workflow_with_conda/test.local.sh

      - name: Run htsinfer test script
        run: bash tests/test_htsinfer_with_conda/test.local.sh

      - name: Run SRA downloads workflow
        run: bash tests/test_sra_download_with_conda/test.local.sh

